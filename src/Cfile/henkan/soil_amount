#include <iostream>
#include <vector>

// 定数としてグリッドサイズを設定
const int GRID_SIZE_X = 12; // x方向のサイズ
const int GRID_SIZE_Y = 4;  // y方向のサイズ

double soil_amount[GRID_SIZE_X][GRID_SIZE_Y];

void initializeSoilAmount() {
    // 初期化：すべての要素を1に設定
    for (int x = 0; x < GRID_SIZE_X; ++x) {
        for (int y = 0; y < GRID_SIZE_Y; ++y) {
            soil_amount[x][y] = 1.0;
        }
    }
}

void applyIndices(const std::vector<std::pair<std::pair<int, int>, double>> &indices, double multiplier) {
    for (const auto &entry : indices) {
        int x = entry.first.first;
        int y = entry.first.second;
        double value = entry.second;

        // 値を適用
        soil_amount[x][y] = multiplier * value;
    }
}

int main() {
    // データ定義
    std::vector<std::pair<std::pair<int, int>, double>> cut_indices = {
        {{2, 0}, 3700}, {{3, 0}, 9000}, {{4, 0}, 9000}, {{5, 0}, 8000}, {{11, 0}, 11200},
        {{1, 1}, 22500}, {{2, 1}, 33800}, {{3, 1}, 36000}, {{4, 1}, 23000}, {{5, 1}, 22200},
        {{6, 1}, 8100}, {{10, 1}, 14300}, {{11, 1}, 7900},
        {{1, 2}, 22500}, {{2, 2}, 28100}, {{3, 2}, 23000}, {{4, 2}, 24300}, {{5, 2}, 14200},
        {{2, 3}, 2300}, {{3, 3}, 1200}, {{4, 3}, 9000}, {{8, 3}, 2300}
    };

    std::vector<std::pair<std::pair<int, int>, double>> fill_indices = {
        {{0, 0}, 15000}, {{1, 0}, 3700}, {{6, 0}, 1000}, {{7, 0}, 11200}, {{8, 0}, 2300},
        {{9, 0}, 22000}, {{10, 0}, 6900},
        {{0, 1}, 62600}, {{7, 1}, 24800}, {{8, 1}, 9900}, {{9, 1}, 2200},
        {{0, 2}, 3700}, {{6, 2}, 12400}, {{7, 2}, 34400}, {{8, 2}, 72500}, {{9, 2}, 28500},
        {{10, 2}, 2500},
        {{1, 3}, 1400}, {{5, 3}, 5900}, {{6, 3}, 9900}, {{7, 3}, 2700}, {{9, 3}, 100}
    };

    std::vector<std::pair<std::pair<int, int>, double>> zero_indices = {
        {{11, 2}, 0},
        {{0, 3}, 0}, {{10, 3}, 0}, {{11, 3}, 0}
    };

    // 配列の初期化
    initializeSoilAmount();

    // 各インデックスに対応する値を適用
    applyIndices(cut_indices, 1.0);  // cut_indicesはそのままプラス
    applyIndices(fill_indices, -1.0); // fill_indicesはマイナスに設定
    applyIndices(zero_indices, 0.0); // zero_indicesは0に設定

    // 配列を表示
    for (int y = 0; y < GRID_SIZE_Y; ++y) {
        for (int x = 0; x < GRID_SIZE_X; ++x) {
            std::cout << soil_amount[x][y] << " ";
        }
        std::cout << std::endl;
    }

    return 0;
}
